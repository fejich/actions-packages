name: Build wg-quick Packages

on:
  workflow_dispatch:

env:
  BUILD_VER: 1
  OP_VER: 23.05.0
  ARCH_MT7621: ramips-mt7621
  ARCH_FILOGIC: mediatek-filogic
  DIR_SDK_MT7621: openwrt-sdk-23.05.0-ramips-mt7621_gcc-12.3.0_musl.Linux-x86_64
  DIR_SDK_FILOGIC: openwrt-sdk-23.05.0-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64

jobs:
  build_packages:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Clone source code
      run: |
        df -hT $PWD
        git clone https://github.com/gngpp/wg-quick
        # git clone --depth=1 https://github.com/coolsnowwolf/lede.git
        # git clone --depth=1 https://github.com/MeIsReallyBa/k2p-openwrt-mt7615_5.0.2.0.git
    - name: Download sdk
      run: |
        df -hT $PWD
        wget https://downloads.openwrt.org/releases/${{ env.OP_VER }}/targets/ramips/mt7621/$DIR_SDK_MT7621.tar.xz
        tar -xf ${{ env.DIR_SDK_MT7621 }}.tar.xz
        ln -sf $PWD/wg-quick $PWD/${{ env.DIR_SDK_MT7621 }}/package/wg-quick
        
        wget https://downloads.openwrt.org/releases/${{ env.OP_VER }}/targets/mediatek/filogic/$DIR_SDK_FILOGIC.tar.xz
        tar -xf ${{ env.DIR_SDK_FILOGIC }}.tar.xz
        ln -sf $PWD/wg-quick $PWD/${{ env.DIR_SDK_FILOGIC }}/package/wg-quick
        ls -al
    - name: Build ipk
      run: |
        cd ${{ env.DIR_SDK_MT7621 }}
        make defconfig
        make package/wg-quick/compile V=s -j$(nproc)
        cp $(find . -name wg-quick*.ipk) ../wg-quick_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        cd ..
        echo ===============================
        cd ${{ env.DIR_SDK_FILOGIC }}
        make defconfig
        make package/wg-quick/compile V=s -j$(nproc)
        cp $(find . -name wg-quick*.ipk) ../wg-quick_${{ env.ARCH_FILOGIC }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        cd ..
    - name: Create Release
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: package_${{ env.OP_VER }}_${{ env.BUILD_VER }}
        release_name: package_${{ env.OP_VER }}_${{ env.BUILD_VER }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: wg-quick_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        asset_name: wg-quick_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        asset_content_type: application/ipk

    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: wg-quick_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        asset_name: wg-quick_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ env.BUILD_VER }}.ipk
        asset_content_type: application/ipk
